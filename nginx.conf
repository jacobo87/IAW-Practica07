user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
	# multi_accept on;
}

http {
    # ---------------------------------- Proxy de las solicitudes HTTP --------------------------------------
    # Definimos el grupo con la directiva upstream
    # Grupo de servidores --- frontend ---
    upstream frontend {
        # No se especifica ningún método de balanceo de carga para el Round Robin

        # Conexiones mínimas - Se envía una solicitud al servidor con el menor número de conexiones activas
        # least_conn;

        #  Menor tiempo - Para cada solicitud, NGINX Plus selecciona el servidor con la latencia media más baja y el menor número de conexiones activas
        # least_time header;

        # Aleatorio - Cada petición será pasada a un servidor seleccionado al azar.
        # random two least_time=last_byte;

        # Le decimos los servidores de los cuales queremos que haga el balanceo de carga
        server  172.31.88.61:8000;
        server  172.31.90.13:8001;
        # Si uno de los servidores necesita ser removido temporalmente de la rotación de balanceo de carga, puede ser marcado con el parámetro down
        # server  10.0.0.1:8002 down;
    }

    server {
        listen 80;
        server_name 172.31.51.130;
        location / {
            # Definimos el nombre del proxy para pasar solicitudes
            proxy_pass http://frontend;
        }
    }
	
	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}


#mail {
#	# See sample authentication script at:
#	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
# 
#	# auth_http localhost/auth.php;
#	# pop3_capabilities "TOP" "USER";
#	# imap_capabilities "IMAP4rev1" "UIDPLUS";
# 
#	server {
#		listen     localhost:110;
#		protocol   pop3;
#		proxy      on;
#	}
# 
#	server {
#		listen     localhost:143;
#		protocol   imap;
#		proxy      on;
#	}
#}